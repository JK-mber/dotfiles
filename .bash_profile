###
# ~/.bash_profile
# $Header: /home/str_cgh/cvsroot/OticonSetenv/lib/.bash_profile,v 1.24 2015/03/19 11:57:31 str_cgh Exp $
# This file is run whenever you login and has bash as login shell.
# After running this file PATH very likely contains some system paths
# twice. After this follows the paths of your projects.
#
# Some of this file (after AUTOUPDATE) is autogenerated from a perl script
# "environment<your_project>.pl" under /usr/local/wdh/binary/OticonSetenv/lib.
#
# This goes for the PATH and environment vars.
# What comes before the autogenerated stuff is up to you to decide - this
# file is only a template to be updated.
#
# To change the content of the autogenerated stuff you must edit the perl file
# under CVS or request str_cgh@oticon.dk to do it.
#
###
#
# Setup aliases - this is also run by bashrc as the only stuff
#

alias screen='screen -h 1000 -e^Tt'
# alias ll='ls -l'
# alias la='ls -a'
# alias lla='ls -la'
alias more=less
# alias u=pushd
# alias p=popd
# alias l2a='pushd ~/projects/lego2_analog/umc'
# alias z='pushd ~/projects/zen/ic_xilinx/develop/digital/design/main'
# alias zu='pushd ~/projects/zen/ic_umc18/develop/digital/design/top/jump3dsp'
# alias za='pushd ~/projects/zen/ic_xilinx/rev_a/digital/design/top/jump3dsp'
# alias zb='pushd ~/projects/zen/ic_umc18/rev_b/digital/design/top/jump3dsp'
# alias f='pushd ~/projects/fusion/ic_1/develop/digital/design/main'
alias n='ls -lrtah | tail'
alias nl='less `ls -1rt *.log | tail -1`'
alias lics='/tools/otils/bin/dolmstat -v'
alias matlab='matlab-r2008a'
[ -f /usr/local/wdh/binary/OticonSetenv/lib/cdargs-bash.sh ] && . /usr/local/wdh/binary/OticonSetenv/lib/cdargs-bash.sh

export UNAME=`uname`
#DEBUG=1

[ -z "$DEBUG" ] || echo DEBUG set !
function addpath(){
  if [ "$UNAME" == "Linux" ]; then
    EGREP="/bin/egrep -q"
  else
    EGREP="/bin/egrep -s"
  fi
  pathlistname=$1
  pathvarname=$2
  dothis=$3
  for d in ${!pathlistname}; do
  echo ${!pathvarname} | $EGREP "(^|:)$d($|:)"
  if [ "$?" == "0" ]; then
    [ -z "$DEBUG" ] || echo not $dothis $d to $2
  else
    [ -z "$DEBUG" ] || echo $dothis $d to $2
    if [ "$dothis" = "prepending" ]; then
      eval $2="$d:${!pathvarname}"
    else
      eval $2="${!pathvarname}:$d"
    fi
  fi
  done
}

# # show the end of the current pwd in the prompt
# function prom1 {
#   # How many characters of the $PWD should be kept
#   local pwd_length=35
#   if [ $(echo -n $PWD | wc -c | tr -d " ") -gt $pwd_length ]; then
#     newPWD="...$(perl -e "print substr(shift,-$pwd_length)" $PWD)"
#   else
#     newPWD="$(echo $PWD)"
#   fi

#   echo $newPWD
# }

# Set prompt using prom1 function defined above
# YELLOW='\[\e[0;33m\]'
# RED='\[\e[1;31m\]'
# BLUE='\[\e[1;34m\]'
# NC='\[\e[0m\]' #no color


# Set prompt using prom1 function defined above
#PS1="${RED}*${NC} $HOSTNAME${NC}"' [`prom1`]$ '
# PS1="* $HOSTNAME"' [`prom1`]$ '



# prevent that this runs again setting env var

################################################################
# Set title of window
################################################################

wdh_title_add()
{
  if [ -n "$1" ]; then
    export WDH_TITLE_ADD="$WDH_TITLE_ADD $1"
  fi

  echo -n "]2;$USER@$HOSTNAME -$WDH_TITLE_ADD - $(pwd)"
}
export P4PORT=perforce.emea.demant.com:5000

#p4_commands=`p4 help commands | awk 'NF>3 {print $1}'`

function complete_p4 {
  local cmd=1
  while true; do
    case ${COMP_WORDS[$cmd]} in
-G | -s | -??*)  let cmd++ ;;
-?)  let cmd+=2 ;;
*)   break ;;
    esac
  done

  if [ $COMP_CWORD = $cmd ] ; then
    COMPREPLY=(`compgen -W "$p4_commands" $2`)
  elif [ $COMP_CWORD -gt $cmd ] ; then
    COMPREPLY=(`compgen -f $2`)
  fi
  }

#complete -F complete_p4 p4

#dynamic umask handling
umask 027
# function cd {
#   builtin cd "$@"
#   rc=$?
#   [ -f ~/.umaskrc ] &&  umask $(awk 'BEGIN {pwd=ENVIRON["PWD"]; a=length(pwd); cmax=0} {if($1==pwd) {MASK=$2;exit}; c=length($1); if(c>a) {next}; if(substr(pwd,0,c)==$1 && c > cmax) {cmax=c; MASK=$2}} END {print MASK}' ~/.umaskrc) > /dev/null
#   wdh_title_add
#   return $rc
# }


export LM_LICENSE_FILE=5280@kbnux011.emea.demant.com:5310@kbnuxlic01.linux.emea.demant.com:5320@kbnuxlic01.linux.emea.demant.com:5330@kbnuxlic01.linux.emea.demant.com:5340@kbnuxlic01.linux.emea.demant.com:5350@kbnux011.emea.demant.com:5360@kbnux011.emea.demant.com:5280@kbn-wanlic.emea.demant.com:27000@kbnbsmal03.emea.demant.com:5390@kbn-wanlic.emea.demant.com

. ~/.bash_user


# AUTOUPDATE FROM HERE
# Last updated on 2017-03-02 14:55:02
# DONT REWRITE THE FOLLOWING LINES - THEY ARE AUTOGENERATED!
alias sshstart=". /usr/local/wdh/bin/sshkeysstart"
alias sshstop=". /usr/local/wdh/bin/sshkeysstop"
export HOSTNAME=`hostname`
#source grid settings
. /usr/sepp/bin/gridsettings.sh
KERNEL24=`uname -r |grep 2.4.21`
if [ -n "$KERNEL24" ]; then
  export LD_ASSUME_KERNEL=2.4.1
fi
# Common *NIX stuff goes here
#
export SHELL=/bin/bash
export LM_LICENSE_FILE=5280@kbnux011.emea.demant.com:5310@kbnuxlic01.linux.emea.demant.com:5320@kbnuxlic01.linux.emea.demant.com:5330@kbnuxlic01.linux.emea.demant.com:5340@kbnuxlic01.linux.emea.demant.com:5350@kbnux011.emea.demant.com:5360@kbnux011.emea.demant.com:5390@kbnuxlic01.emea.demant.com:27000@kbnbsmal03.emea.demant.com
export P4CONFIG=.p4settings
export P4PORT=perforce.emea.demant.com:5000
export P4MERGE="p4v -merge"
export P4USER="jeka"
export CURRENT_SITE=OTICON
export DRCTEMPDIR=/projectstmp
export PS2=">"

if [ "$UNAME" == "Linux" ]; then
# Linux variant stuff here
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib:/usr/lib:/usr/local/lib:/usr/X11R6/lib
pathappend="/bin \
/usr/bin \
/usr/local/bin \
 /usr/sepp/bin \
/tools/otils/bin \
/usr/local/wdh/bin \
 "
pathprepend=""
else
# Solaris variant stuff here
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib:/usr/lib:/usr/local/lib:/usr/openwin/lib
pathappend="/usr/local/bin /usr/openwin/lib \
/usr/NX/bin \
/usr/X11R6/bin \
 /usr/sepp/bin \
/tools/otils/bin \
/usr/local/wdh/bin \
 "
pathprepend="/usr/local/bin"
fi # end os dependant stuff
addpath pathappend PATH appending
addpath pathprepend PATH prepending
. /usr/local/wdh/bin/smart_cd
. /usr/local/wdh/bin/forge_complete.sh

